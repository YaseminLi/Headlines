{"version":3,"sources":["webpack:///./src/helper/antdIcon.js","webpack:///./src/js/component/pc_header.js"],"names":["MenuItem","Item","TabPane","FormItem","PCHeader","state","current","modalVisible","action","hasLogined","userNickName","userId","localStorage","this","setState","value","e","formData","props","form","getFieldsValue","console","log","userName","setModalVisible","key","getFieldDecorator","userShow","className","type","to","target","onClick","logout","bind","login","span","class","mode","selectedKeys","handleClick","title","wrapClassName","visible","onOk","onCancel","okText","cancelText","onChange","callback","tab","layout","onSubmit","handleSubmit","label","placeholder","htmlType","React","Component","WrappedRegistrationForm","create","name"],"mappings":"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","file":"PCHeader.chunk.js","sourcesContent":["export { default as plus } from \"@ant-design/icons/lib/outline/PlusOutline\";\nexport { default as appstore } from \"@ant-design/icons/lib/outline/AppstoreOutline\";\nexport { default as smile } from \"@ant-design/icons/lib/outline/SmileOutline\";\nexport { default as eye} from \"@ant-design/icons/lib/outline/EyeOutline\";\nexport { default as download } from \"@ant-design/icons/lib/outline/DownloadOutline\";\nexport { default as delete } from \"@ant-design/icons/lib/outline/DeleteOutline\";","import React from 'react';\nimport { Row, Col } from 'antd';\nimport { Menu, Icon, Modal, Button, Tabs, Form, Input } from 'antd';\nimport { BrowserRouter , Link } from 'react-router-dom';\n\nconst MenuItem = Menu.Item;\nconst TabPane = Tabs.TabPane;\nconst FormItem = Form.Item;\n\nclass PCHeader extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            current: 'top',\n            modalVisible: false,\n            action: 'login',\n            hasLogined: false,\n            userNickName: '',\n            userId: 0\n        }\n    }\n    //页面刷新保留登录状态\n    //组件将要加载前\n    componentWillMount() {\n        if (localStorage.userNickName !== '') {\n            this.setState({\n                hasLogined: true,\n                userNickName: localStorage.userNickName,\n                userId: localStorage.userId\n            })\n        }\n    }\n    setModalVisible(value) {\n        this.setState({ modalVisible: value })\n    }\n    handleClick(e) {\n        this.setState({ current: 'e.key' });\n    }\n    handleSubmit(e) {\n        const formData = this.props.form.getFieldsValue();\n        console.log(formData);\n        \n        this.setState({\n            userNickName: formData.userName, userId: formData.userId, hasLogined: true\n        })\n        this.setModalVisible(false);\n        localStorage.userId = formData.userId;\n        localStorage.userNickName = formData.userName;\n    }\n    callback(key) {\n        if (key == 1) {\n            this.setState({ action: 'login' });\n        } else { this.setState({ action: 'register' }); }\n    };\n    logout() {\n        localStorage.userId = \"\";\n        localStorage.userNickName = \"\";\n        this.setState({\n            hasLogined: false\n        })\n    }\n    login() {\n        this.setState({ current: 'register' });\n        this.setModalVisible(true);\n    }\n    render() {\n        const { getFieldDecorator } = this.props.form;\n        const userShow = this.state.hasLogined ?\n            <div key='logout' className='register'>\n                <Button type=\"primary\" >{this.state.userNickName}</Button>\n                &nbsp;&nbsp;\n                <BrowserRouter>\n                    <Link to={`/usercenter`} target=\"_blank\">\n                        <Button type=\"ghost\" >个人中心</Button>\n                    </Link>\n                &nbsp;&nbsp;\n                    <Link to={`/`} target=\"_blank\">\n                    <Button type=\"dashed\" onClick={this.logout.bind(this)}>退出</Button>\n                    </Link>\n                </BrowserRouter>\n            \n            </div>\n            : <div key='register' className='register' onClick={this.login.bind(this)}>\n                <Button type=\"primary\" >注册/登录</Button>\n            </div>;\n        return (\n            <header>\n                <Row>\n                    <Col span={2}></Col>\n                    <Col span={4} className='logo'>\n                    <BrowserRouter><Link to={`/`} target=\"_blank\">\n                        <i class=\"iconfont iconNews\"></i>\n                        <span>ReactNews</span>\n                        </Link></BrowserRouter>\n                    </Col>\n                    <Col span={16} className='tags' >\n                        <Menu mode='horizontal' selectedKeys={[this.state.current]} onClick={this.handleClick.bind(this)}>\n                            <MenuItem key='top'> <Icon type=\"appstore\" />头条</MenuItem>\n                            <MenuItem key='guonei'> <Icon type=\"appstore\" />国内</MenuItem>\n                            <MenuItem key='shehui'> <Icon type=\"appstore\" />社会</MenuItem>\n                            <MenuItem key='yule'> <Icon type=\"appstore\" />娱乐</MenuItem>\n                            <MenuItem key='tiyu'> <Icon type=\"appstore\" />体育</MenuItem>\n                            <MenuItem key='jiankang'> <Icon type=\"appstore\" />健康</MenuItem>\n                            <MenuItem key='shishang'> <Icon type=\"appstore\" />时尚</MenuItem>\n                        </Menu>\n                        {userShow}\n                        <Modal\n                            title=\"用户中心\"\n                            wrapClassName='vertical-center-modal'\n                            visible={this.state.modalVisible}\n                            onOk={() => this.setModalVisible(false)}\n                            onCancel={this.setModalVisible.bind(this, false)}\n                            okText='关闭'\n                            cancelText='取消'\n                        >\n                            <Tabs type=\"card\" onChange={this.callback.bind(this)}>\n                                <TabPane tab=\"登录\" key=\"1\">\n                                    <Form layout='horizontal' onSubmit={this.handleSubmit.bind(this)}>\n                                        <FormItem label='账户'>\n                                            {getFieldDecorator('userName')(<Input placeholder=\"请输入用户名\" />)}\n                                        </FormItem>\n                                        <FormItem label='密码'>\n                                            {getFieldDecorator('password')(<Input type='password' placeholder=\"请输入您的密码\" />)}\n                                        </FormItem>\n                                        <Button type='primary' htmlType='submit'>登录</Button>\n                                    </Form>\n                                </TabPane>\n                                <TabPane tab=\"注册\" key=\"2\">\n                                    <Form layout='horizontal'>\n                                        <FormItem label='账户'>\n                                            {getFieldDecorator('r_userName')(<Input placeholder=\"请输入用户名\" />)}\n                                        </FormItem>\n                                        <FormItem label='密码'>\n                                            {getFieldDecorator('r_password')(<Input type='password' placeholder=\"请输入您的密码\" />)}\n                                        </FormItem>\n                                        <FormItem label='密码'>\n                                            {getFieldDecorator('r_confirmPassword')(<Input type='password' placeholder=\"请确认您的密码\" />)}\n                                        </FormItem>\n                                        <Button type='primary' htmlType='submit'>注册</Button>\n                                    </Form>\n                                </TabPane>\n                            </Tabs>\n                        </Modal>\n                    </Col>\n                    <Col span={2}></Col>\n                </Row>\n            </header>\n        )\n    }\n}\nconst WrappedRegistrationForm = Form.create({ name: 'PCHeader' })(PCHeader);\n\nexport default WrappedRegistrationForm;"],"sourceRoot":""}